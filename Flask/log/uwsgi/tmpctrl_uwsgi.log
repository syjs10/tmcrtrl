*** Starting uWSGI 2.0.18 (64bit) on [Sat Feb 23 23:05:46 2019] ***
compiled with version: 5.4.0 20160609 on 23 February 2019 14:31:21
os: Linux-4.8.0-52-generic #55~16.04.1-Ubuntu SMP Fri Apr 28 14:36:29 UTC 2017
nodename: syjs10
machine: x86_64
clock source: unix
pcre jit disabled
detected number of CPU cores: 8
current working directory: /home/syjs10/tmpctrl/Flask
detected binary path: /usr/local/bin/uwsgi
chdir() to /home/syjs10/tmpctrl/Flask
your processes number limit is 31420
your memory page size is 4096 bytes
detected max file descriptor number: 1024
lock engine: pthread robust mutexes
thunder lock: disabled (you can enable it with --thunder-lock)
uwsgi socket 0 bound to UNIX address /home/syjs10/tmpctrl/Flask/tmpctrl_uwsgi.sock fd 3
uwsgi socket 1 bound to TCP address 127.0.0.1:7000 fd 4
Python version: 3.5.2 (default, Nov 17 2016, 17:05:23)  [GCC 5.4.0 20160609]
*** Python threads support is disabled. You can enable it with --enable-threads ***
Python main interpreter initialized at 0x1bde4a0
your server socket listen backlog is limited to 100 connections
your mercy for graceful operations on workers is 60 seconds
mapped 291680 bytes (284 KB) for 3 cores
*** Operational MODE: preforking ***
WSGI app 0 (mountpoint='') ready in 0 seconds on interpreter 0x1bde4a0 pid: 19071 (default app)
*** uWSGI is running in multiple interpreter mode ***
spawned uWSGI master process (pid: 19071)
spawned uWSGI worker 1 (pid: 19073, cores: 1)
spawned uWSGI worker 2 (pid: 19074, cores: 1)
spawned uWSGI worker 3 (pid: 19075, cores: 1)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
[pid: 19073|app: 0|req: 1/1] 127.0.0.1 () {44 vars in 778 bytes} [Sat Feb 23 23:05:56 2019] GET / => generated 12 bytes in 1 msecs (HTTP/1.1 200) 2 headers in 79 bytes (1 switches on core 0)
SIGINT/SIGQUIT received...killing workers...
worker 1 buried after 1 seconds
worker 2 buried after 1 seconds
worker 3 buried after 1 seconds
goodbye to uWSGI.
VACUUM: unix socket /home/syjs10/tmpctrl/Flask/tmpctrl_uwsgi.sock removed.
*** Starting uWSGI 2.0.18 (64bit) on [Sat Feb 23 23:26:46 2019] ***
compiled with version: 5.4.0 20160609 on 23 February 2019 14:31:21
os: Linux-4.8.0-52-generic #55~16.04.1-Ubuntu SMP Fri Apr 28 14:36:29 UTC 2017
nodename: syjs10
machine: x86_64
clock source: unix
pcre jit disabled
detected number of CPU cores: 8
current working directory: /home/syjs10/tmpctrl/Flask
detected binary path: /usr/local/bin/uwsgi
chdir() to /home/syjs10/tmpctrl/Flask
your processes number limit is 31420
your memory page size is 4096 bytes
detected max file descriptor number: 1024
lock engine: pthread robust mutexes
thunder lock: disabled (you can enable it with --thunder-lock)
uwsgi socket 0 bound to UNIX address /home/syjs10/tmpctrl/Flask/tmpctrl_uwsgi.sock fd 3
uwsgi socket 1 bound to TCP address 127.0.0.1:7000 fd 4
Python version: 3.5.2 (default, Nov 17 2016, 17:05:23)  [GCC 5.4.0 20160609]
*** Python threads support is disabled. You can enable it with --enable-threads ***
Python main interpreter initialized at 0x227b430
your server socket listen backlog is limited to 100 connections
your mercy for graceful operations on workers is 60 seconds
mapped 291680 bytes (284 KB) for 3 cores
*** Operational MODE: preforking ***
WSGI app 0 (mountpoint='') ready in 0 seconds on interpreter 0x227b430 pid: 19984 (default app)
*** uWSGI is running in multiple interpreter mode ***
spawned uWSGI master process (pid: 19984)
spawned uWSGI worker 1 (pid: 19986, cores: 1)
spawned uWSGI worker 2 (pid: 19987, cores: 1)
spawned uWSGI worker 3 (pid: 19988, cores: 1)
SIGINT/SIGQUIT received...killing workers...
worker 1 buried after 1 seconds
worker 2 buried after 1 seconds
worker 3 buried after 1 seconds
goodbye to uWSGI.
VACUUM: unix socket /home/syjs10/tmpctrl/Flask/tmpctrl_uwsgi.sock removed.
*** Starting uWSGI 2.0.18 (64bit) on [Sat Feb 23 23:51:07 2019] ***
compiled with version: 5.4.0 20160609 on 23 February 2019 14:31:21
os: Linux-4.8.0-52-generic #55~16.04.1-Ubuntu SMP Fri Apr 28 14:36:29 UTC 2017
nodename: syjs10
machine: x86_64
clock source: unix
pcre jit disabled
detected number of CPU cores: 8
current working directory: /usr/local/bin
detected binary path: /usr/local/bin/uwsgi
chdir() to /home/syjs10/tmpctrl/Flask
your processes number limit is 31420
your memory page size is 4096 bytes
detected max file descriptor number: 1024
lock engine: pthread robust mutexes
thunder lock: disabled (you can enable it with --thunder-lock)
uwsgi socket 0 bound to UNIX address /home/syjs10/tmpctrl/Flask/tmpctrl_uwsgi.sock fd 3
uwsgi socket 1 bound to TCP address 127.0.0.1:7000 fd 4
Python version: 3.5.2 (default, Nov 17 2016, 17:05:23)  [GCC 5.4.0 20160609]
*** Python threads support is disabled. You can enable it with --enable-threads ***
Python main interpreter initialized at 0x1d5cfe0
your server socket listen backlog is limited to 100 connections
your mercy for graceful operations on workers is 60 seconds
mapped 291680 bytes (284 KB) for 3 cores
*** Operational MODE: preforking ***
WSGI app 0 (mountpoint='') ready in 0 seconds on interpreter 0x1d5cfe0 pid: 22141 (default app)
*** uWSGI is running in multiple interpreter mode ***
spawned uWSGI master process (pid: 22141)
spawned uWSGI worker 1 (pid: 22145, cores: 1)
spawned uWSGI worker 2 (pid: 22146, cores: 1)
spawned uWSGI worker 3 (pid: 22147, cores: 1)
[pid: 22147|app: 0|req: 1/1] 127.0.0.1 () {44 vars in 785 bytes} [Sat Feb 23 23:51:45 2019] GET / => generated 12 bytes in 4 msecs (HTTP/1.1 200) 2 headers in 79 bytes (1 switches on core 0)
[pid: 22147|app: 0|req: 2/2] 127.0.0.1 () {44 vars in 785 bytes} [Sat Feb 23 23:51:46 2019] GET / => generated 12 bytes in 1 msecs (HTTP/1.1 200) 2 headers in 79 bytes (1 switches on core 0)
[pid: 22146|app: 0|req: 1/3] 127.0.0.1 () {44 vars in 785 bytes} [Sat Feb 23 23:51:46 2019] GET / => generated 12 bytes in 5 msecs (HTTP/1.1 200) 2 headers in 79 bytes (1 switches on core 0)
[pid: 22146|app: 0|req: 2/4] 127.0.0.1 () {44 vars in 785 bytes} [Sat Feb 23 23:51:46 2019] GET / => generated 12 bytes in 1 msecs (HTTP/1.1 200) 2 headers in 79 bytes (1 switches on core 0)
...brutally killing workers...
worker 1 buried after 1 seconds
worker 2 buried after 1 seconds
worker 3 buried after 1 seconds
binary reloading uWSGI...
chdir() to /usr/local/bin
closing all non-uwsgi socket fds > 2 (max_fd = 1024)...
found fd 3 mapped to socket 0 (/home/syjs10/tmpctrl/Flask/tmpctrl_uwsgi.sock)
found fd 4 mapped to socket 1 (127.0.0.1:7000)
running /usr/local/bin/uwsgi
[uWSGI] getting INI configuration from /home/syjs10/tmpctrl/Flask/tmpctrl_uwsgi.ini
*** Starting uWSGI 2.0.18 (64bit) on [Sat Feb 23 23:59:16 2019] ***
compiled with version: 5.4.0 20160609 on 23 February 2019 14:31:21
os: Linux-4.8.0-52-generic #55~16.04.1-Ubuntu SMP Fri Apr 28 14:36:29 UTC 2017
nodename: syjs10
machine: x86_64
clock source: unix
pcre jit disabled
detected number of CPU cores: 8
current working directory: /usr/local/bin
detected binary path: /usr/local/bin/uwsgi
chdir() to /home/syjs10/tmpctrl/Flask
your processes number limit is 31420
your memory page size is 4096 bytes
detected max file descriptor number: 1024
lock engine: pthread robust mutexes
thunder lock: disabled (you can enable it with --thunder-lock)
uwsgi socket 0 inherited UNIX address /home/syjs10/tmpctrl/Flask/tmpctrl_uwsgi.sock fd 3
uwsgi socket 1 inherited INET address 127.0.0.1:7000 fd 4
Python version: 3.5.2 (default, Nov 17 2016, 17:05:23)  [GCC 5.4.0 20160609]
*** Python threads support is disabled. You can enable it with --enable-threads ***
Python main interpreter initialized at 0x147eaf0
your server socket listen backlog is limited to 100 connections
your mercy for graceful operations on workers is 60 seconds
mapped 291680 bytes (284 KB) for 3 cores
*** Operational MODE: preforking ***
WSGI app 0 (mountpoint='') ready in 0 seconds on interpreter 0x147eaf0 pid: 22141 (default app)
*** uWSGI is running in multiple interpreter mode ***
gracefully (RE)spawned uWSGI master process (pid: 22141)
spawned uWSGI worker 1 (pid: 22683, cores: 1)
spawned uWSGI worker 2 (pid: 22684, cores: 1)
spawned uWSGI worker 3 (pid: 22685, cores: 1)
Sat Feb 23 23:59:25 2019 - uWSGI worker 3 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Sat Feb 23 23:59:25 2019 - uWSGI worker 1 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Sat Feb 23 23:59:25 2019 - uWSGI worker 2 screams: UAAAAAAH my master disconnected: i will kill myself !!!
*** Starting uWSGI 2.0.18 (64bit) on [Sun Feb 24 11:01:37 2019] ***
compiled with version: 5.4.0 20160609 on 23 February 2019 14:31:21
os: Linux-4.8.0-52-generic #55~16.04.1-Ubuntu SMP Fri Apr 28 14:36:29 UTC 2017
nodename: syjs10
machine: x86_64
clock source: unix
pcre jit disabled
detected number of CPU cores: 8
current working directory: /usr/local/bin
detected binary path: /usr/local/bin/uwsgi
chdir() to /home/syjs10/tmpctrl/Flask
your processes number limit is 31420
your memory page size is 4096 bytes
detected max file descriptor number: 1024
lock engine: pthread robust mutexes
thunder lock: disabled (you can enable it with --thunder-lock)
uwsgi socket 0 bound to UNIX address /home/syjs10/tmpctrl/Flask/tmpctrl_uwsgi.sock fd 3
uwsgi socket 1 bound to TCP address 127.0.0.1:7000 fd 4
Python version: 3.5.2 (default, Nov 17 2016, 17:05:23)  [GCC 5.4.0 20160609]
*** Python threads support is disabled. You can enable it with --enable-threads ***
Python main interpreter initialized at 0x232dfe0
your server socket listen backlog is limited to 100 connections
your mercy for graceful operations on workers is 60 seconds
mapped 291680 bytes (284 KB) for 3 cores
*** Operational MODE: preforking ***
WSGI app 0 (mountpoint='') ready in 2 seconds on interpreter 0x232dfe0 pid: 6733 (default app)
*** uWSGI is running in multiple interpreter mode ***
spawned uWSGI master process (pid: 6733)
spawned uWSGI worker 1 (pid: 6742, cores: 1)
spawned uWSGI worker 2 (pid: 6743, cores: 1)
spawned uWSGI worker 3 (pid: 6744, cores: 1)
...brutally killing workers...
worker 1 buried after 1 seconds
worker 2 buried after 1 seconds
worker 3 buried after 1 seconds
binary reloading uWSGI...
chdir() to /usr/local/bin
closing all non-uwsgi socket fds > 2 (max_fd = 1024)...
found fd 3 mapped to socket 0 (/home/syjs10/tmpctrl/Flask/tmpctrl_uwsgi.sock)
found fd 4 mapped to socket 1 (127.0.0.1:7000)
running /usr/local/bin/uwsgi
[uWSGI] getting INI configuration from /home/syjs10/tmpctrl/Flask/tmpctrl_uwsgi.ini
*** Starting uWSGI 2.0.18 (64bit) on [Sun Feb 24 11:02:03 2019] ***
compiled with version: 5.4.0 20160609 on 23 February 2019 14:31:21
os: Linux-4.8.0-52-generic #55~16.04.1-Ubuntu SMP Fri Apr 28 14:36:29 UTC 2017
nodename: syjs10
machine: x86_64
clock source: unix
pcre jit disabled
detected number of CPU cores: 8
current working directory: /usr/local/bin
detected binary path: /usr/local/bin/uwsgi
chdir() to /home/syjs10/tmpctrl/Flask
your processes number limit is 31420
your memory page size is 4096 bytes
detected max file descriptor number: 1024
lock engine: pthread robust mutexes
thunder lock: disabled (you can enable it with --thunder-lock)
uwsgi socket 0 inherited UNIX address /home/syjs10/tmpctrl/Flask/tmpctrl_uwsgi.sock fd 3
uwsgi socket 1 inherited INET address 127.0.0.1:7000 fd 4
Python version: 3.5.2 (default, Nov 17 2016, 17:05:23)  [GCC 5.4.0 20160609]
*** Python threads support is disabled. You can enable it with --enable-threads ***
Python main interpreter initialized at 0x2477af0
your server socket listen backlog is limited to 100 connections
your mercy for graceful operations on workers is 60 seconds
mapped 291680 bytes (284 KB) for 3 cores
*** Operational MODE: preforking ***
WSGI app 0 (mountpoint='') ready in 0 seconds on interpreter 0x2477af0 pid: 6733 (default app)
*** uWSGI is running in multiple interpreter mode ***
gracefully (RE)spawned uWSGI master process (pid: 6733)
spawned uWSGI worker 1 (pid: 6782, cores: 1)
spawned uWSGI worker 2 (pid: 6783, cores: 1)
spawned uWSGI worker 3 (pid: 6784, cores: 1)
Sun Feb 24 11:02:12 2019 - uWSGI worker 3 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Sun Feb 24 11:02:12 2019 - uWSGI worker 2 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Sun Feb 24 11:02:12 2019 - uWSGI worker 1 screams: UAAAAAAH my master disconnected: i will kill myself !!!
*** Starting uWSGI 2.0.18 (64bit) on [Sun Feb 24 11:02:13 2019] ***
compiled with version: 5.4.0 20160609 on 23 February 2019 14:31:21
os: Linux-4.8.0-52-generic #55~16.04.1-Ubuntu SMP Fri Apr 28 14:36:29 UTC 2017
nodename: syjs10
machine: x86_64
clock source: unix
pcre jit disabled
detected number of CPU cores: 8
current working directory: /usr/local/bin
detected binary path: /usr/local/bin/uwsgi
chdir() to /home/syjs10/tmpctrl/Flask
your processes number limit is 31420
your memory page size is 4096 bytes
detected max file descriptor number: 1024
lock engine: pthread robust mutexes
thunder lock: disabled (you can enable it with --thunder-lock)
uwsgi socket 0 bound to UNIX address /home/syjs10/tmpctrl/Flask/tmpctrl_uwsgi.sock fd 3
uwsgi socket 1 bound to TCP address 127.0.0.1:7000 fd 4
Python version: 3.5.2 (default, Nov 17 2016, 17:05:23)  [GCC 5.4.0 20160609]
*** Python threads support is disabled. You can enable it with --enable-threads ***
Python main interpreter initialized at 0x2026fe0
your server socket listen backlog is limited to 100 connections
your mercy for graceful operations on workers is 60 seconds
mapped 291680 bytes (284 KB) for 3 cores
*** Operational MODE: preforking ***
WSGI app 0 (mountpoint='') ready in 0 seconds on interpreter 0x2026fe0 pid: 6808 (default app)
*** uWSGI is running in multiple interpreter mode ***
spawned uWSGI master process (pid: 6808)
spawned uWSGI worker 1 (pid: 6810, cores: 1)
spawned uWSGI worker 2 (pid: 6811, cores: 1)
spawned uWSGI worker 3 (pid: 6812, cores: 1)
[pid: 6811|app: 0|req: 1/1] 127.0.0.1 () {44 vars in 785 bytes} [Sun Feb 24 11:02:14 2019] GET / => generated 12 bytes in 1 msecs (HTTP/1.1 200) 2 headers in 79 bytes (1 switches on core 0)
[pid: 6811|app: 0|req: 2/2] 127.0.0.1 () {46 vars in 786 bytes} [Sun Feb 24 11:02:14 2019] GET /favicon.ico => generated 233 bytes in 69 msecs (HTTP/1.1 404) 2 headers in 72 bytes (1 switches on core 0)
[pid: 6812|app: 0|req: 1/3] 127.0.0.1 () {44 vars in 785 bytes} [Sun Feb 24 11:36:33 2019] GET / => generated 12 bytes in 3 msecs (HTTP/1.1 200) 2 headers in 79 bytes (1 switches on core 0)
[pid: 6812|app: 0|req: 2/4] 127.0.0.1 () {42 vars in 760 bytes} [Sun Feb 24 11:36:37 2019] GET /get => generated 233 bytes in 7 msecs (HTTP/1.1 404) 2 headers in 72 bytes (1 switches on core 0)
[pid: 6811|app: 0|req: 3/5] 127.0.0.1 () {48 vars in 878 bytes} [Sun Feb 24 11:43:38 2019] GET / => generated 12 bytes in 1 msecs (HTTP/1.1 200) 2 headers in 79 bytes (1 switches on core 0)
[pid: 6810|app: 0|req: 1/6] 127.0.0.1 () {44 vars in 785 bytes} [Sun Feb 24 11:43:38 2019] GET / => generated 12 bytes in 1 msecs (HTTP/1.1 200) 2 headers in 79 bytes (1 switches on core 0)
[pid: 6810|app: 0|req: 2/7] 127.0.0.1 () {44 vars in 785 bytes} [Sun Feb 24 11:43:38 2019] GET / => generated 12 bytes in 1 msecs (HTTP/1.1 200) 2 headers in 79 bytes (1 switches on core 0)
[pid: 6810|app: 0|req: 3/8] 127.0.0.1 () {44 vars in 785 bytes} [Sun Feb 24 11:43:39 2019] GET / => generated 12 bytes in 0 msecs (HTTP/1.1 200) 2 headers in 79 bytes (1 switches on core 0)
[pid: 6810|app: 0|req: 4/9] 127.0.0.1 () {44 vars in 785 bytes} [Sun Feb 24 11:43:39 2019] GET / => generated 12 bytes in 1 msecs (HTTP/1.1 200) 2 headers in 79 bytes (1 switches on core 0)
[pid: 6811|app: 0|req: 4/10] 127.0.0.1 () {42 vars in 760 bytes} [Sun Feb 24 11:44:28 2019] GET /get => generated 233 bytes in 1 msecs (HTTP/1.1 404) 2 headers in 72 bytes (1 switches on core 0)
[pid: 6810|app: 0|req: 5/11] 127.0.0.1 () {42 vars in 764 bytes} [Sun Feb 24 11:44:33 2019] GET /index => generated 233 bytes in 8 msecs (HTTP/1.1 404) 2 headers in 72 bytes (1 switches on core 0)
[pid: 6810|app: 0|req: 6/12] 127.0.0.1 () {44 vars in 795 bytes} [Sun Feb 24 11:44:54 2019] GET /index => generated 233 bytes in 0 msecs (HTTP/1.1 404) 2 headers in 72 bytes (1 switches on core 0)
[pid: 6811|app: 0|req: 5/13] 127.0.0.1 () {44 vars in 795 bytes} [Sun Feb 24 11:50:50 2019] GET /index => generated 233 bytes in 0 msecs (HTTP/1.1 404) 2 headers in 72 bytes (1 switches on core 0)
[pid: 6812|app: 0|req: 3/14] 127.0.0.1 () {44 vars in 795 bytes} [Sun Feb 24 11:50:55 2019] GET /index => generated 233 bytes in 1 msecs (HTTP/1.1 404) 2 headers in 72 bytes (1 switches on core 0)
[pid: 6812|app: 0|req: 4/15] 127.0.0.1 () {42 vars in 754 bytes} [Sun Feb 24 11:57:14 2019] GET / => generated 12 bytes in 0 msecs (HTTP/1.1 200) 2 headers in 79 bytes (1 switches on core 0)
[pid: 6812|app: 0|req: 5/16] 127.0.0.1 () {42 vars in 760 bytes} [Sun Feb 24 11:57:18 2019] GET /get => generated 233 bytes in 0 msecs (HTTP/1.1 404) 2 headers in 72 bytes (1 switches on core 0)
[pid: 6811|app: 0|req: 6/17] 127.0.0.1 () {44 vars in 791 bytes} [Sun Feb 24 12:01:51 2019] GET /get => generated 233 bytes in 1 msecs (HTTP/1.1 404) 2 headers in 72 bytes (1 switches on core 0)
[pid: 6812|app: 0|req: 6/18] 127.0.0.1 () {42 vars in 762 bytes} [Sun Feb 24 12:01:54 2019] GET /get/ => generated 233 bytes in 1 msecs (HTTP/1.1 404) 2 headers in 72 bytes (1 switches on core 0)
[pid: 6812|app: 0|req: 7/19] 127.0.0.1 () {42 vars in 754 bytes} [Sun Feb 24 12:01:57 2019] GET / => generated 12 bytes in 1 msecs (HTTP/1.1 200) 2 headers in 79 bytes (1 switches on core 0)
[pid: 6810|app: 0|req: 7/20] 127.0.0.1 () {46 vars in 827 bytes} [Sun Feb 24 12:10:03 2019] GET / => generated 12 bytes in 1 msecs (HTTP/1.1 200) 2 headers in 79 bytes (1 switches on core 0)
[pid: 6811|app: 0|req: 7/21] 127.0.0.1 () {46 vars in 826 bytes} [Sun Feb 24 12:10:06 2019] GET /get => generated 233 bytes in 0 msecs (HTTP/1.1 404) 2 headers in 72 bytes (1 switches on core 0)
[pid: 6810|app: 0|req: 8/22] 127.0.0.1 () {44 vars in 797 bytes} [Sun Feb 24 12:10:17 2019] GET // => generated 12 bytes in 1 msecs (HTTP/1.1 200) 2 headers in 79 bytes (1 switches on core 0)
[pid: 6812|app: 0|req: 8/23] 127.0.0.1 () {44 vars in 804 bytes} [Sun Feb 24 12:10:22 2019] GET /get/ => generated 233 bytes in 0 msecs (HTTP/1.1 404) 2 headers in 72 bytes (1 switches on core 0)
[pid: 6812|app: 0|req: 9/24] 127.0.0.1 () {46 vars in 835 bytes} [Sun Feb 24 12:10:59 2019] GET /get/ => generated 233 bytes in 1 msecs (HTTP/1.1 404) 2 headers in 72 bytes (1 switches on core 0)
[pid: 6812|app: 0|req: 10/25] 127.0.0.1 () {50 vars in 920 bytes} [Sun Feb 24 12:11:57 2019] GET / => generated 12 bytes in 0 msecs (HTTP/1.1 200) 2 headers in 79 bytes (1 switches on core 0)
[pid: 6812|app: 0|req: 11/26] 127.0.0.1 () {46 vars in 827 bytes} [Sun Feb 24 12:11:57 2019] GET / => generated 12 bytes in 1 msecs (HTTP/1.1 200) 2 headers in 79 bytes (1 switches on core 0)
[pid: 6811|app: 0|req: 8/27] 127.0.0.1 () {46 vars in 827 bytes} [Sun Feb 24 12:11:57 2019] GET / => generated 12 bytes in 1 msecs (HTTP/1.1 200) 2 headers in 79 bytes (1 switches on core 0)
[pid: 6810|app: 0|req: 9/28] 127.0.0.1 () {46 vars in 827 bytes} [Sun Feb 24 12:11:58 2019] GET / => generated 12 bytes in 0 msecs (HTTP/1.1 200) 2 headers in 79 bytes (1 switches on core 0)
[pid: 6812|app: 0|req: 12/29] 127.0.0.1 () {46 vars in 827 bytes} [Sun Feb 24 12:11:58 2019] GET / => generated 12 bytes in 0 msecs (HTTP/1.1 200) 2 headers in 79 bytes (1 switches on core 0)
[pid: 6810|app: 0|req: 10/30] 127.0.0.1 () {46 vars in 827 bytes} [Sun Feb 24 12:11:58 2019] GET / => generated 12 bytes in 0 msecs (HTTP/1.1 200) 2 headers in 79 bytes (1 switches on core 0)
[pid: 6812|app: 0|req: 13/31] 127.0.0.1 () {46 vars in 827 bytes} [Sun Feb 24 12:11:58 2019] GET / => generated 12 bytes in 0 msecs (HTTP/1.1 200) 2 headers in 79 bytes (1 switches on core 0)
[pid: 6812|app: 0|req: 14/32] 127.0.0.1 () {46 vars in 827 bytes} [Sun Feb 24 12:11:58 2019] GET / => generated 12 bytes in 1 msecs (HTTP/1.1 200) 2 headers in 79 bytes (1 switches on core 0)
[pid: 6811|app: 0|req: 9/33] 127.0.0.1 () {46 vars in 827 bytes} [Sun Feb 24 12:11:59 2019] GET / => generated 12 bytes in 1 msecs (HTTP/1.1 200) 2 headers in 79 bytes (1 switches on core 0)
...brutally killing workers...
worker 1 buried after 1 seconds
worker 2 buried after 1 seconds
worker 3 buried after 1 seconds
binary reloading uWSGI...
chdir() to /usr/local/bin
closing all non-uwsgi socket fds > 2 (max_fd = 1024)...
found fd 3 mapped to socket 0 (/home/syjs10/tmpctrl/Flask/tmpctrl_uwsgi.sock)
found fd 4 mapped to socket 1 (127.0.0.1:7000)
running /usr/local/bin/uwsgi
[uWSGI] getting INI configuration from /home/syjs10/tmpctrl/Flask/tmpctrl_uwsgi.ini
*** Starting uWSGI 2.0.18 (64bit) on [Sun Feb 24 12:14:52 2019] ***
compiled with version: 5.4.0 20160609 on 23 February 2019 14:31:21
os: Linux-4.8.0-52-generic #55~16.04.1-Ubuntu SMP Fri Apr 28 14:36:29 UTC 2017
nodename: syjs10
machine: x86_64
clock source: unix
pcre jit disabled
detected number of CPU cores: 8
current working directory: /usr/local/bin
detected binary path: /usr/local/bin/uwsgi
chdir() to /home/syjs10/tmpctrl/Flask
your processes number limit is 31420
your memory page size is 4096 bytes
detected max file descriptor number: 1024
lock engine: pthread robust mutexes
thunder lock: disabled (you can enable it with --thunder-lock)
uwsgi socket 0 inherited UNIX address /home/syjs10/tmpctrl/Flask/tmpctrl_uwsgi.sock fd 3
uwsgi socket 1 inherited INET address 127.0.0.1:7000 fd 4
Python version: 3.5.2 (default, Nov 17 2016, 17:05:23)  [GCC 5.4.0 20160609]
*** Python threads support is disabled. You can enable it with --enable-threads ***
Python main interpreter initialized at 0xa72ba0
your server socket listen backlog is limited to 100 connections
your mercy for graceful operations on workers is 60 seconds
mapped 291680 bytes (284 KB) for 3 cores
*** Operational MODE: preforking ***
WSGI app 0 (mountpoint='') ready in 0 seconds on interpreter 0xa72ba0 pid: 6808 (default app)
*** uWSGI is running in multiple interpreter mode ***
gracefully (RE)spawned uWSGI master process (pid: 6808)
spawned uWSGI worker 1 (pid: 11164, cores: 1)
spawned uWSGI worker 2 (pid: 11165, cores: 1)
spawned uWSGI worker 3 (pid: 11166, cores: 1)
[pid: 11166|app: 0|req: 1/1] 127.0.0.1 () {46 vars in 827 bytes} [Sun Feb 24 12:14:55 2019] GET / => generated 12 bytes in 3 msecs (HTTP/1.1 200) 2 headers in 79 bytes (1 switches on core 0)
Sun Feb 24 12:15:01 2019 - uWSGI worker 3 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Sun Feb 24 12:15:01 2019 - uWSGI worker 2 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Sun Feb 24 12:15:01 2019 - uWSGI worker 1 screams: UAAAAAAH my master disconnected: i will kill myself !!!
*** Starting uWSGI 2.0.18 (64bit) on [Sun Feb 24 12:15:02 2019] ***
compiled with version: 5.4.0 20160609 on 23 February 2019 14:31:21
os: Linux-4.8.0-52-generic #55~16.04.1-Ubuntu SMP Fri Apr 28 14:36:29 UTC 2017
nodename: syjs10
machine: x86_64
clock source: unix
pcre jit disabled
detected number of CPU cores: 8
current working directory: /usr/local/bin
detected binary path: /usr/local/bin/uwsgi
chdir() to /home/syjs10/tmpctrl/Flask
your processes number limit is 31420
your memory page size is 4096 bytes
detected max file descriptor number: 1024
lock engine: pthread robust mutexes
thunder lock: disabled (you can enable it with --thunder-lock)
uwsgi socket 0 bound to UNIX address /home/syjs10/tmpctrl/Flask/tmpctrl_uwsgi.sock fd 3
uwsgi socket 1 bound to TCP address 127.0.0.1:7000 fd 4
Python version: 3.5.2 (default, Nov 17 2016, 17:05:23)  [GCC 5.4.0 20160609]
*** Python threads support is disabled. You can enable it with --enable-threads ***
Python main interpreter initialized at 0x1db1070
your server socket listen backlog is limited to 100 connections
your mercy for graceful operations on workers is 60 seconds
mapped 291680 bytes (284 KB) for 3 cores
*** Operational MODE: preforking ***
WSGI app 0 (mountpoint='') ready in 0 seconds on interpreter 0x1db1070 pid: 11209 (default app)
*** uWSGI is running in multiple interpreter mode ***
spawned uWSGI master process (pid: 11209)
spawned uWSGI worker 1 (pid: 11211, cores: 1)
spawned uWSGI worker 2 (pid: 11212, cores: 1)
spawned uWSGI worker 3 (pid: 11213, cores: 1)
[pid: 11211|app: 0|req: 1/1] 127.0.0.1 () {46 vars in 827 bytes} [Sun Feb 24 12:15:03 2019] GET / => generated 12 bytes in 3 msecs (HTTP/1.1 200) 2 headers in 79 bytes (1 switches on core 0)
[pid: 11211|app: 0|req: 2/2] 127.0.0.1 () {46 vars in 827 bytes} [Sun Feb 24 12:15:04 2019] GET / => generated 12 bytes in 1 msecs (HTTP/1.1 200) 2 headers in 79 bytes (1 switches on core 0)
[pid: 11213|app: 0|req: 1/3] 127.0.0.1 () {44 vars in 802 bytes} [Sun Feb 24 12:15:07 2019] GET /get => generated 259 bytes in 13 msecs (HTTP/1.1 301) 3 headers in 133 bytes (1 switches on core 0)
[pid: 11212|app: 0|req: 1/4] 127.0.0.1 () {44 vars in 804 bytes} [Sun Feb 24 12:15:07 2019] GET /get/ => generated 3 bytes in 1 msecs (HTTP/1.1 200) 2 headers in 78 bytes (1 switches on core 0)
[pid: 11212|app: 0|req: 2/5] 127.0.0.1 () {46 vars in 835 bytes} [Sun Feb 24 14:42:53 2019] GET /get/ => generated 3 bytes in 1 msecs (HTTP/1.1 200) 2 headers in 78 bytes (1 switches on core 0)
[pid: 11211|app: 0|req: 3/6] 127.0.0.1 () {44 vars in 808 bytes} [Sun Feb 24 14:42:56 2019] GET /get/12 => generated 233 bytes in 7 msecs (HTTP/1.1 404) 2 headers in 72 bytes (1 switches on core 0)
[pid: 11211|app: 0|req: 4/7] 127.0.0.1 () {44 vars in 804 bytes} [Sun Feb 24 14:43:03 2019] GET /get/ => generated 3 bytes in 1 msecs (HTTP/1.1 200) 2 headers in 78 bytes (1 switches on core 0)
[pid: 11211|app: 0|req: 5/8] 127.0.0.1 () {44 vars in 804 bytes} [Sun Feb 24 14:43:06 2019] GET /get/ => generated 3 bytes in 0 msecs (HTTP/1.1 200) 2 headers in 78 bytes (1 switches on core 0)
[pid: 11212|app: 0|req: 3/9] 127.0.0.1 () {44 vars in 810 bytes} [Sun Feb 24 14:44:30 2019] GET /get/123 => generated 233 bytes in 19 msecs (HTTP/1.1 404) 2 headers in 72 bytes (1 switches on core 0)
[pid: 11211|app: 0|req: 6/10] 127.0.0.1 () {46 vars in 841 bytes} [Sun Feb 24 14:50:37 2019] GET /get/123 => generated 233 bytes in 1 msecs (HTTP/1.1 404) 2 headers in 72 bytes (1 switches on core 0)
[pid: 11211|app: 0|req: 7/11] 127.0.0.1 () {46 vars in 841 bytes} [Sun Feb 24 14:50:37 2019] GET /get/123 => generated 233 bytes in 1 msecs (HTTP/1.1 404) 2 headers in 72 bytes (1 switches on core 0)
[pid: 11213|app: 0|req: 2/12] 127.0.0.1 () {46 vars in 841 bytes} [Sun Feb 24 14:51:19 2019] GET /get/123 => generated 233 bytes in 0 msecs (HTTP/1.1 404) 2 headers in 72 bytes (1 switches on core 0)
[pid: 11212|app: 0|req: 4/13] 127.0.0.1 () {46 vars in 841 bytes} [Sun Feb 24 14:51:20 2019] GET /get/123 => generated 233 bytes in 1 msecs (HTTP/1.1 404) 2 headers in 72 bytes (1 switches on core 0)
[pid: 11212|app: 0|req: 5/14] 127.0.0.1 () {46 vars in 841 bytes} [Sun Feb 24 14:51:20 2019] GET /get/123 => generated 233 bytes in 1 msecs (HTTP/1.1 404) 2 headers in 72 bytes (1 switches on core 0)
[pid: 11212|app: 0|req: 6/15] 127.0.0.1 () {46 vars in 841 bytes} [Sun Feb 24 14:51:20 2019] GET /get/123 => generated 233 bytes in 1 msecs (HTTP/1.1 404) 2 headers in 72 bytes (1 switches on core 0)
...brutally killing workers...
worker 1 buried after 1 seconds
worker 2 buried after 1 seconds
worker 3 buried after 1 seconds
binary reloading uWSGI...
chdir() to /usr/local/bin
closing all non-uwsgi socket fds > 2 (max_fd = 1024)...
found fd 3 mapped to socket 0 (/home/syjs10/tmpctrl/Flask/tmpctrl_uwsgi.sock)
found fd 4 mapped to socket 1 (127.0.0.1:7000)
running /usr/local/bin/uwsgi
[uWSGI] getting INI configuration from /home/syjs10/tmpctrl/Flask/tmpctrl_uwsgi.ini
*** Starting uWSGI 2.0.18 (64bit) on [Sun Feb 24 15:10:48 2019] ***
compiled with version: 5.4.0 20160609 on 23 February 2019 14:31:21
os: Linux-4.8.0-52-generic #55~16.04.1-Ubuntu SMP Fri Apr 28 14:36:29 UTC 2017
nodename: syjs10
machine: x86_64
clock source: unix
pcre jit disabled
detected number of CPU cores: 8
current working directory: /usr/local/bin
detected binary path: /usr/local/bin/uwsgi
chdir() to /home/syjs10/tmpctrl/Flask
your processes number limit is 31420
your memory page size is 4096 bytes
detected max file descriptor number: 1024
lock engine: pthread robust mutexes
thunder lock: disabled (you can enable it with --thunder-lock)
uwsgi socket 0 inherited UNIX address /home/syjs10/tmpctrl/Flask/tmpctrl_uwsgi.sock fd 3
uwsgi socket 1 inherited INET address 127.0.0.1:7000 fd 4
Python version: 3.5.2 (default, Nov 17 2016, 17:05:23)  [GCC 5.4.0 20160609]
*** Python threads support is disabled. You can enable it with --enable-threads ***
Python main interpreter initialized at 0x1af2ba0
your server socket listen backlog is limited to 100 connections
your mercy for graceful operations on workers is 60 seconds
mapped 291680 bytes (284 KB) for 3 cores
*** Operational MODE: preforking ***
WSGI app 0 (mountpoint='') ready in 0 seconds on interpreter 0x1af2ba0 pid: 11209 (default app)
*** uWSGI is running in multiple interpreter mode ***
gracefully (RE)spawned uWSGI master process (pid: 11209)
spawned uWSGI worker 1 (pid: 14247, cores: 1)
spawned uWSGI worker 2 (pid: 14248, cores: 1)
spawned uWSGI worker 3 (pid: 14249, cores: 1)
Sun Feb 24 15:10:57 2019 - uWSGI worker 2 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Sun Feb 24 15:10:57 2019 - uWSGI worker 3 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Sun Feb 24 15:10:57 2019 - uWSGI worker 1 screams: UAAAAAAH my master disconnected: i will kill myself !!!
*** Starting uWSGI 2.0.18 (64bit) on [Sun Feb 24 15:10:58 2019] ***
compiled with version: 5.4.0 20160609 on 23 February 2019 14:31:21
os: Linux-4.8.0-52-generic #55~16.04.1-Ubuntu SMP Fri Apr 28 14:36:29 UTC 2017
nodename: syjs10
machine: x86_64
clock source: unix
pcre jit disabled
detected number of CPU cores: 8
current working directory: /usr/local/bin
detected binary path: /usr/local/bin/uwsgi
chdir() to /home/syjs10/tmpctrl/Flask
your processes number limit is 31420
your memory page size is 4096 bytes
detected max file descriptor number: 1024
lock engine: pthread robust mutexes
thunder lock: disabled (you can enable it with --thunder-lock)
uwsgi socket 0 bound to UNIX address /home/syjs10/tmpctrl/Flask/tmpctrl_uwsgi.sock fd 3
uwsgi socket 1 bound to TCP address 127.0.0.1:7000 fd 4
Python version: 3.5.2 (default, Nov 17 2016, 17:05:23)  [GCC 5.4.0 20160609]
*** Python threads support is disabled. You can enable it with --enable-threads ***
Python main interpreter initialized at 0x103a070
your server socket listen backlog is limited to 100 connections
your mercy for graceful operations on workers is 60 seconds
mapped 291680 bytes (284 KB) for 3 cores
*** Operational MODE: preforking ***
WSGI app 0 (mountpoint='') ready in 0 seconds on interpreter 0x103a070 pid: 14276 (default app)
*** uWSGI is running in multiple interpreter mode ***
spawned uWSGI master process (pid: 14276)
spawned uWSGI worker 1 (pid: 14278, cores: 1)
spawned uWSGI worker 2 (pid: 14279, cores: 1)
spawned uWSGI worker 3 (pid: 14280, cores: 1)
[pid: 14280|app: 0|req: 1/1] 127.0.0.1 () {46 vars in 841 bytes} [Sun Feb 24 15:13:50 2019] GET /get/123 => generated 233 bytes in 13 msecs (HTTP/1.1 404) 2 headers in 72 bytes (1 switches on core 0)
[pid: 14279|app: 0|req: 1/2] 127.0.0.1 () {46 vars in 841 bytes} [Sun Feb 24 15:13:50 2019] GET /get/123 => generated 233 bytes in 26 msecs (HTTP/1.1 404) 2 headers in 72 bytes (1 switches on core 0)
[pid: 14278|app: 0|req: 1/3] 127.0.0.1 () {46 vars in 841 bytes} [Sun Feb 24 15:13:51 2019] GET /get/123 => generated 233 bytes in 22 msecs (HTTP/1.1 404) 2 headers in 72 bytes (1 switches on core 0)
[pid: 14279|app: 0|req: 2/4] 127.0.0.1 () {44 vars in 796 bytes} [Sun Feb 24 15:15:38 2019] GET / => generated 12 bytes in 0 msecs (HTTP/1.1 200) 2 headers in 79 bytes (1 switches on core 0)
...brutally killing workers...
worker 1 buried after 1 seconds
worker 2 buried after 1 seconds
worker 3 buried after 1 seconds
binary reloading uWSGI...
chdir() to /usr/local/bin
closing all non-uwsgi socket fds > 2 (max_fd = 1024)...
found fd 3 mapped to socket 0 (/home/syjs10/tmpctrl/Flask/tmpctrl_uwsgi.sock)
found fd 4 mapped to socket 1 (127.0.0.1:7000)
running /usr/local/bin/uwsgi
[uWSGI] getting INI configuration from /home/syjs10/tmpctrl/Flask/tmpctrl_uwsgi.ini
*** Starting uWSGI 2.0.18 (64bit) on [Sun Feb 24 15:28:16 2019] ***
compiled with version: 5.4.0 20160609 on 23 February 2019 14:31:21
os: Linux-4.8.0-52-generic #55~16.04.1-Ubuntu SMP Fri Apr 28 14:36:29 UTC 2017
nodename: syjs10
machine: x86_64
clock source: unix
pcre jit disabled
detected number of CPU cores: 8
current working directory: /usr/local/bin
detected binary path: /usr/local/bin/uwsgi
chdir() to /home/syjs10/tmpctrl/Flask
your processes number limit is 31420
your memory page size is 4096 bytes
detected max file descriptor number: 1024
lock engine: pthread robust mutexes
thunder lock: disabled (you can enable it with --thunder-lock)
uwsgi socket 0 inherited UNIX address /home/syjs10/tmpctrl/Flask/tmpctrl_uwsgi.sock fd 3
uwsgi socket 1 inherited INET address 127.0.0.1:7000 fd 4
Python version: 3.5.2 (default, Nov 17 2016, 17:05:23)  [GCC 5.4.0 20160609]
*** Python threads support is disabled. You can enable it with --enable-threads ***
Python main interpreter initialized at 0x1260ba0
your server socket listen backlog is limited to 100 connections
your mercy for graceful operations on workers is 60 seconds
mapped 291680 bytes (284 KB) for 3 cores
*** Operational MODE: preforking ***
WSGI app 0 (mountpoint='') ready in 0 seconds on interpreter 0x1260ba0 pid: 14276 (default app)
*** uWSGI is running in multiple interpreter mode ***
gracefully (RE)spawned uWSGI master process (pid: 14276)
spawned uWSGI worker 1 (pid: 15504, cores: 1)
spawned uWSGI worker 2 (pid: 15505, cores: 1)
spawned uWSGI worker 3 (pid: 15506, cores: 1)
Sun Feb 24 15:28:25 2019 - uWSGI worker 2 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Sun Feb 24 15:28:25 2019 - uWSGI worker 3 screams: UAAAAAAH my master disconnected: i will kill myself !!!
Sun Feb 24 15:28:25 2019 - uWSGI worker 1 screams: UAAAAAAH my master disconnected: i will kill myself !!!
